// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

StructuredBuffer<int>simRange;
StructuredBuffer<float> coeffs;


#define COEFFMAXRANGE  10
#define COEEFWIDTH (COEFFMAXRANGE*2 + 1)


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int width, height;
    Result.GetDimensions(width, height);

    int resolution = simRange[0] * 2 + 1;

    int posX = id.x * resolution / width;
    int posY = id.y * resolution / height;

    float val = coeffs[COEEFWIDTH * (posX + COEFFMAXRANGE - simRange[0]) + posY + COEFFMAXRANGE - simRange[0]];
    if (val >= 0.0) {

        Result[id.xy] = float4(0, val, 0, 1.0);
    }
    else {
        Result[id.xy] = float4(-val, 0, 0, 1.0);
    }
    
}
